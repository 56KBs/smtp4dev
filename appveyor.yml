version: 3.0.{build}-{branch}
os: Visual Studio 2017
configuration: Release
skip_tags: true
branches:
  except:
    - azure-pipelines
environment:
  DOCKERUSERNAME: rnwood
  DOCKERPASSWORD:
    secure: 5jWYD10eY+CLicPtEtSMng==
  FRAMEWORK: netcoreapp2.1
  matrix:
    - RUNTIME: noruntime      	
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - RUNTIME: win-x64    
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - RUNTIME: linux-x64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - RUNTIME: osx-x64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - RUNTIME: win-x86
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - RUNTIME: docker
      DOCKERPLATFORM: windows-amd64
      DOCKERFILE: windows
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    - RUNTIME: docker
      DOCKERPLATFORM: linux-amd64
      DOCKERFILE: linux
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu	  
assembly_info:
  patch: true
  file: '**\SolutionInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
nuget:
  account_feed: false
  project_feed: false
install:
- ps: |
    if ($env:RUNTIME -ne "docker") {
        Install-Product node ''
    }
build_script:
 - ps: |
    if ($env:RUNTIME -eq "docker") {
      docker pull rnwood/smtp4dev:$($env:DOCKERPLATFORM)-v3
      docker build --cache-from rnwood/smtp4dev:$($env:DOCKERPLATFORM)-v3 -m 4g -t rnwood/smtp4dev:$($env:DOCKERPLATFORM)-v3 -f Dockerfile.$($env:DOCKERFILE) .
      docker tag rnwood/smtp4dev:$($env:DOCKERPLATFORM)-v3 rnwood/smtp4dev:$($env:DOCKERPLATFORM)-$($env:APPVEYOR_BUILD_VERSION)	  
    } else {
        dotnet build Smtp4dev.sln -c $env:Configuration
    }
after_build:
 - ps: |
    $versionsuffix=$("{0:D4}" -f [convert]::ToInt32($env:APPVEYOR_BUILD_NUMBER, 10))
    if ($env:RUNTIME -eq "docker") {
        docker login -u "$env:DOCKERUSERNAME" -p "$env:DOCKERPASSWORD"
        docker push rnwood/smtp4dev:$($env:DOCKERPLATFORM)-v3
        docker push rnwood/smtp4dev:$($env:DOCKERPLATFORM)-$($env:APPVEYOR_BUILD_VERSION)
    } elseif ($env:RUNTIME -ne "noruntime") {
       dotnet publish Rnwood.Smtp4dev -c $env:Configuration -f $env:FRAMEWORK -r $env:RUNTIME --version-suffix $versionsuffix -o publish
    } else {
       dotnet publish Rnwood.Smtp4dev -c $env:Configuration -f $env:FRAMEWORK --version-suffix $versionsuffix -o publish
    }
artifacts:
- path: Rnwood.Smtp4dev\publish
  name: Smtp4dev-$(runtime)-v$(appveyor_build_version)
  type: zip
deploy:
  provider: GitHub
  artifact: /.*\..*/
  auth_token:
    secure: 5zLYIRVYHWHyZYOUZ2F46AvAYb3OLIWs35PQUddGkyK3xkV7qCmaMT38PJY6OiY7
  prerelease: true
  on:
    branch: master                 # release from master branch only
    appveyor_repo_tag: false
cache:
    - Rnwood.Smtp4dev\node_modules -> Rnwood.Smtp4dev\package.json
    - nuget_packages -> **\*.csproj